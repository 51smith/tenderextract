version: '3.8'

services:
  tender-extraction-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - USE_REDIS=true
      - REDIS_URL=redis://redis:6379
      - ENABLE_EXTRACTION_CACHE=true
      - LOG_LEVEL=INFO
    volumes:
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Optional: PostgreSQL for production job persistence
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=tender_extraction
      - POSTGRES_USER=tender_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-tender_pass}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    profiles: ["with-db"]

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - tender-extraction-api
    restart: unless-stopped
    profiles: ["with-proxy"]

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: tender-extraction-network